/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import { HTMLStencilElement, JSXBase } from '@stencil/core/internal'

export namespace Components {
  interface StencilaTab {
    /**
     * The link the tab should navigate to
     */
    href: string
    /**
     * Indicates whether the current tab is "selected"
     */
    isSelected: boolean
    /**
     * The displayed text of the Tab
     */
    label: string
  }
  interface StencilaTabList {
    /**
     * The link the tab should navigate to
     */
    href: string
    /**
     * The displayed text of the Tab
     */
    label: string
  }
  interface StencilaToc {
    /**
     * Where to grab the headings to build the table of contents.
     */
    contentSelector: string
    /**
     * Which headings to grab inside of the contentSelector element.
     */
    headingSelector: string
  }
}

declare global {
  interface HTMLStencilaTabElement
    extends Components.StencilaTab,
      HTMLStencilElement {}
  var HTMLStencilaTabElement: {
    prototype: HTMLStencilaTabElement
    new (): HTMLStencilaTabElement
  }

  interface HTMLStencilaTabListElement
    extends Components.StencilaTabList,
      HTMLStencilElement {}
  var HTMLStencilaTabListElement: {
    prototype: HTMLStencilaTabListElement
    new (): HTMLStencilaTabListElement
  }

  interface HTMLStencilaTocElement
    extends Components.StencilaToc,
      HTMLStencilElement {}
  var HTMLStencilaTocElement: {
    prototype: HTMLStencilaTocElement
    new (): HTMLStencilaTocElement
  }
  interface HTMLElementTagNameMap {
    'stencila-tab': HTMLStencilaTabElement
    'stencila-tab-list': HTMLStencilaTabListElement
    'stencila-toc': HTMLStencilaTocElement
  }
}

declare namespace LocalJSX {
  interface StencilaTab extends JSXBase.HTMLAttributes<HTMLStencilaTabElement> {
    /**
     * The link the tab should navigate to
     */
    href?: string
    /**
     * Indicates whether the current tab is "selected"
     */
    isSelected?: boolean
    /**
     * The displayed text of the Tab
     */
    label?: string
  }
  interface StencilaTabList
    extends JSXBase.HTMLAttributes<HTMLStencilaTabListElement> {
    /**
     * The link the tab should navigate to
     */
    href?: string
    /**
     * The displayed text of the Tab
     */
    label?: string
  }
  interface StencilaToc extends JSXBase.HTMLAttributes<HTMLStencilaTocElement> {
    /**
     * Where to grab the headings to build the table of contents.
     */
    contentSelector?: string
    /**
     * Which headings to grab inside of the contentSelector element.
     */
    headingSelector?: string
  }

  interface IntrinsicElements {
    'stencila-tab': StencilaTab
    'stencila-tab-list': StencilaTabList
    'stencila-toc': StencilaToc
  }
}

export { LocalJSX as JSX }

declare module '@stencil/core' {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}
